name: Node.js Package

on:
  push:
    tags:
      - v*
        
jobs:
  make-release: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: npm install
      - run: npx lerna bootstrap --no-ci --scope react-workerhub --include-dependencies
      - run: echo "NODE_ENV=production" >> $GITHUB_ENV
      - run: echo $NODE_ENV
      - run: SKIP_PREFLIGHT_CHECK=true NODE_OPTIONS="--max_old_space_size=4096" npm run build:web --stats
        env: 
          CI: false
      - run: npm run build:app
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          prerelease: true

      - run: zip build.zip -r packages/web-ui/build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: web-ui
          path: |
            build.zip

      - name: Upload Web Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build.zip
          asset_name: webui.zip
          asset_content_type: application/zip
      - name: Upload amd64 deb
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/web-ui/dist/react-workerhub_${ GITHUB_REF##*/v }_amd64.deb
          asset_name: workerhub_${ GITHUB_REF##*/ }_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload armv7l deb - RPI
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packages/web-ui/dist/react-workerhub_${ GITHUB_REF##*/v }_armv7l.deb
          asset_name: workerhub_${ GITHUB_REF##*/ }_armv7l.deb
          asset_content_type: application/vnd.debian.binary-package